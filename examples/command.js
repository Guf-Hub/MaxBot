/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –±–æ—Ç–∞
 */

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
// const bot = MaxBot.init("YOUR_ACCESS_TOKEN");
const bot = new Bot("YOUR_ACCESS_TOKEN");

/**
 * –ü—Ä–∏–º–µ—Ä 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ (—Ä—É—á–Ω–æ–π —Å–ø–æ—Å–æ–±)
 */
function example1() {
  const commands = [
    {
      name: "start",
      description: "–°—Ç–∞—Ä—Ç",
    },
    {
      name: "help",
      description: "–°–ø—Ä–∞–≤–∫–∞",
    },
    {
      name: "menu",
      description: "–ú–µ–Ω—é",
    },
  ];

  try {
    const result = bot.setMyCommands(commands);
    console.log("–ö–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:", result);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥:", error);
  }
}

/**
 * –ü—Ä–∏–º–µ—Ä 1a: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –±–∏–ª–¥–µ—Ä
 */
function example1a() {
  const commands = bot.command
    .start("–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    .help("–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
    .menu("–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    .build();

  try {
    const result = bot.setMyCommands(commands);
    console.log("–ö–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:", result);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥:", error);
  }
}

/**
 * –ü—Ä–∏–º–µ—Ä 2: –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
 */
function example2() {
  try {
    const result = bot.deleteMyCommands();
    console.log("–í—Å–µ –∫–æ–º–∞–Ω–¥—ã —É–¥–∞–ª–µ–Ω—ã:", result);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥:", error);
  }
}

/**
 * –ü—Ä–∏–º–µ—Ä 2a: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ –∫–æ–º–∞–Ω–¥
 */
function example2a() {
  // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥
  const defaultCommands = bot.command.buildDefault();
  console.log("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:", defaultCommands);

  // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥
  const minimalCommands = bot.command.buildMinimal();
  console.log("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:", minimalCommands);

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
  try {
    const result = bot.setMyCommands(defaultCommands);
    console.log("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:", result);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥:", error);
  }
}

/**
 * –ü—Ä–∏–º–µ—Ä 2b: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥
 */
function example2b() {
  const commands = bot.command
    .start("–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    .help("–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
    .menu("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    .settings("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    .profile("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    .info("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
    .contact("–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π")
    .feedback("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
    .language("–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
    .notifications("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    .build();

  try {
    const result = bot.setMyCommands(commands);
    console.log("–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:", result);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥:", error);
  }
}

/**
 * –ü—Ä–∏–º–µ—Ä 3: –ë–æ—Ç —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
 */
class CommandBot extends Bot {
  constructor(accessToken) {
    super(accessToken);
    this.setupCommands();
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
   */
  setupCommands() {
    const commands = this.command
      .start("–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
      .help("–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
      .menu("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
      .build();

    this.setMyCommands(commands);
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
   */
  onMessage(message) {
    const chatId = message.chat_id;
    const text = message.text;

    if (!text) return;

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if (text.startsWith("/")) {
      this.handleCommand(chatId, text);
    } else {
      // –û–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      this.sendMessage({ text: `–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: ${text}`, chatId });
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
   */
  handleCommand(chatId, text) {
    const command = text.split(" ")[0].substring(1); // –£–±–∏—Ä–∞–µ–º '/'

    switch (command) {
      case "start":
        this.sendMessage({
          text: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.",
          chatId,
        });
        break;

      case "help":
        const helpText = `üìö **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**

/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

**–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: /start`;

        this.sendMessage({ text: helpText, chatId, format: "markdown" });
        break;

      case "menu":
        const keyboard = this.keyboard
          .callback("üìã –ü—Ä–æ—Ñ–∏–ª—å", "profile")
          .callback("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "settings")
          .callback("‚ùì –ü–æ–º–æ—â—å", "help")
          .build();

        this.sendMessage({ text: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", chatId, keyboard });
        break;

      default:
        this.sendMessage({
          text: `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: /${command}\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.`,
          chatId,
        });
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫
   */
  onCallback(callback) {
    const chatId = callback.chat_id;
    const payload = callback.payload;

    switch (payload) {
      case "profile":
        this.sendMessage({
          text: "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n–ò–º—è: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n–°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω",
          chatId,
        });
        break;

      case "settings":
        this.sendMessage({
          text: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–∫–ª—é—á–µ–Ω—ã\n–Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π",
          chatId,
        });
        break;

      case "help":
        this.sendMessage({
          text: "–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏.",
          chatId,
        });
        break;
    }
  }
}
